{"ast":null,"code":"var _jsxFileName = \"/Users/ramadhanakhri/Documents/Belajar/web3-twitter/src/pages/Settings.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Settings.css';\nimport { Input } from 'web3uikit';\nimport pfp1 from '../images/pfp1.png';\nimport pfp2 from '../images/pfp2.png';\nimport pfp3 from '../images/pfp3.png';\nimport pfp4 from '../images/pfp4.png';\nimport pfp5 from '../images/pfp5.png';\nimport { useState, useRef, useEffect } from 'react';\nimport { defaultImgs } from '../defaultimgs';\nimport { useMoralis, useMoralisWeb3Api } from 'react-moralis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => {\n  _s();\n\n  const pfps = [pfp1, pfp2, pfp3, pfp4, pfp5];\n  const [selectedPFP, setSelectedPFP] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n  const [theFile, setTheFile] = useState();\n  const [username, setUsername] = useState();\n  const [bio, setBio] = useState();\n  const {\n    Moralis,\n    isAuthenticated,\n    account\n  } = useMoralis();\n  const Web3Api = useMoralisWeb3Api();\n\n  const resolveLink = url => {\n    if (!url || !url.includes(\"ipfs://\")) return url;\n    return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\n  };\n\n  useEffect(() => {\n    const fetchNFTs = async () => {\n      const option = {\n        chain: \"mainnet\",\n        address: account\n      };\n      const mainnetNFTs = await Web3Api.account.getNFTs(option);\n      const images = mainnetNFTs.result.map(e => {\n        var _JSON$parse;\n\n        return resolveLink((_JSON$parse = JSON.parse(e.metadata)) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse.image);\n      });\n    };\n  }, [isAuthenticated, account]);\n\n  const onBannerClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = event => {\n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend(\"_User\");\n    const query = new Moralis.Query(User);\n    const myDetails = await query.first();\n\n    if (bio) {\n      myDetails.set(\"bio\", bio);\n    }\n\n    if (username) {\n      myDetails.set(\"username\", username);\n    }\n\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      myDetails.set(\"banner\", file.ipfs());\n    }\n\n    await myDetails.save();\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageIdentify\",\n      children: \"Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settingsPage\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        label: \"Name\",\n        name: \"NameChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        label: \"Bio\",\n        name: \"bioChange\",\n        width: \"100%\",\n        labelBgColor: \"#141d26\",\n        onChange: e => setBio(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Image (Your NFTs)\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: pfps.map((e, i) => {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                alt: \"\",\n                src: e,\n                className: selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\",\n                onClick: () => {\n                  setSelectedPFP(pfps[i]);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pfp\",\n        children: [\"Profile Banner\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pfpOptions\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            alt: \"\",\n            src: selectedFile,\n            onClick: onBannerClick,\n            className: \"banner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"file\",\n            ref: inputFile,\n            onChange: changeHandler,\n            style: {\n              display: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"save\",\n        onClick: () => saveEdits(),\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Settings, \"CqgcOty7WTsnLCuU7G8FLl34B8g=\", false, function () {\n  return [useMoralis, useMoralisWeb3Api];\n});\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/ramadhanakhri/Documents/Belajar/web3-twitter/src/pages/Settings.js"],"names":["React","Link","Input","pfp1","pfp2","pfp3","pfp4","pfp5","useState","useRef","useEffect","defaultImgs","useMoralis","useMoralisWeb3Api","Settings","pfps","selectedPFP","setSelectedPFP","inputFile","selectedFile","setSelectedFile","theFile","setTheFile","username","setUsername","bio","setBio","Moralis","isAuthenticated","account","Web3Api","resolveLink","url","includes","replace","fetchNFTs","option","chain","address","mainnetNFTs","getNFTs","images","result","map","e","JSON","parse","metadata","image","onBannerClick","current","click","changeHandler","event","img","target","files","URL","createObjectURL","saveEdits","User","Object","extend","query","Query","myDetails","first","set","data","file","File","name","saveIPFS","ipfs","save","window","location","reload","value","i","display"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Settings.css'\nimport { Input } from 'web3uikit'\nimport pfp1 from '../images/pfp1.png'\nimport pfp2 from '../images/pfp2.png'\nimport pfp3 from '../images/pfp3.png'\nimport pfp4 from '../images/pfp4.png'\nimport pfp5 from '../images/pfp5.png'\nimport { useState, useRef, useEffect } from 'react'\nimport { defaultImgs } from '../defaultimgs'\nimport { useMoralis, useMoralisWeb3Api } from 'react-moralis'\n\nconst Settings = () => {\n  const pfps = [pfp1, pfp2, pfp3, pfp4, pfp5];\n  const [selectedPFP, setSelectedPFP] = useState();\n  const inputFile = useRef(null);\n  const [selectedFile, setSelectedFile] = useState(defaultImgs[1]);\n  const [theFile, setTheFile] = useState();\n  const [username, setUsername] = useState();\n  const [bio, setBio] = useState();\n  const { Moralis, isAuthenticated, account } = useMoralis();\n  const Web3Api = useMoralisWeb3Api();\n\n  const resolveLink = (url) => {\n    if (!url || !url.includes(\"ipfs://\")) return url;\n    return url.replace(\"ipfs://\", \"https://gateway.ipfs.io/ipfs/\");\n  };\n\n  useEffect(() => {\n\n    const fetchNFTs = async () => {\n      const option = {\n        chain: \"mainnet\",\n        address: account\n      }\n\n      const mainnetNFTs = await Web3Api.account.getNFTs(option);\n      const images = mainnetNFTs.result.map(\n        (e) => resolveLink(JSON.parse(e.metadata)?.image)\n      )\n\n    }\n\n  },[isAuthenticated, account])\n\n  const onBannerClick = () => {\n    inputFile.current.click();\n  };\n\n  const changeHandler = (event) => {\n    \n    const img = event.target.files[0];\n    setTheFile(img);\n    setSelectedFile(URL.createObjectURL(img));\n  };\n\n  const saveEdits = async () => {\n    const User = Moralis.Object.extend(\"_User\");\n    const query = new Moralis.Query(User);\n    const myDetails = await query.first(); \n\n    if (bio) {\n      myDetails.set(\"bio\", bio)\n    }\n    if (username) {\n      myDetails.set(\"username\", username)\n    }\n    if (theFile) {\n      const data = theFile;\n      const file = new Moralis.File(data.name, data);\n      await file.saveIPFS();\n      myDetails.set(\"banner\", file.ipfs());\n    }\n    await myDetails.save();\n    window.location.reload();\n\n  }\n\n  return (\n    <>\n      <div className=\"pageIdentify\">Settings</div>\n      <div className=\"settingsPage\">\n        <Input\n          label=\"Name\"\n          name=\"NameChange\"\n          width=\"100%\"\n          labelBgColor=\"#141d26\"\n          onChange={(e)=> setUsername(e.target.value)}\n        />\n\n        <Input\n          label=\"Bio\"\n          name=\"bioChange\"\n          width=\"100%\"\n          labelBgColor=\"#141d26\"\n          onChange={(e)=> setBio(e.target.value)}\n        />\n        <div className=\"pfp\">\n          Profile Image (Your NFTs)\n          <div className=\"pfpOptions\">\n            {pfps.map((e, i) => {\n              return (\n                <>\n                  <img\n                    alt=\"\"\n                    src={e}\n                    className={selectedPFP === e ? \"pfpOptionSelected\" : \"pfpOption\"}\n                    onClick={() => {\n                      setSelectedPFP(pfps[i])\n                    }}\n                  ></img>\n                </>\n              )\n            })}\n          </div>\n        </div>\n        <div className=\"pfp\">\n          Profile Banner\n          <div className=\"pfpOptions\">\n            <img\n              alt=\"\"\n              src={selectedFile}\n              onClick={onBannerClick}\n              className=\"banner\"\n            ></img>\n            <input\n              type=\"file\"\n              name=\"file\"\n              ref={inputFile}\n              onChange={changeHandler}\n              style={{ display: \"none\" }}\n            />\n          </div>\n        </div>  \n        <div className=\"save\" \n        onClick={() => saveEdits()}\n        >\n          Save\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default Settings\n"]},"metadata":{},"sourceType":"module"}